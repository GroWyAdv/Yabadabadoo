import { __awaiter, __generator } from "tslib";
import { cloneInternalLocationData, pushUnique } from "../utils";
import { DataStoreInvalidLocationError, DataStoreNotInitializedError, } from "./DataStore";
/**
 * A data store that saves to and loads from the memory.
 *
 * For more information about its methods see {@link DataStore}.
 */
var MemoryStore = /** @class */ (function () {
    function MemoryStore() {
    }
    MemoryStore.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.data != null) {
                    return [2 /*return*/];
                }
                this.data = {};
                this.states = {};
                this.counties = {};
                return [2 /*return*/];
            });
        });
    };
    MemoryStore.prototype.putLocationData = function (data) {
        return __awaiter(this, void 0, void 0, function () {
            var _i, data_1, locationData, location_1, countryOrRegion, provinceOrState, county;
            return __generator(this, function (_a) {
                if (this.data == null || this.counties == null || this.states == null) {
                    throw new DataStoreNotInitializedError();
                }
                for (_i = 0, data_1 = data; _i < data_1.length; _i++) {
                    locationData = data_1[_i];
                    location_1 = locationData.location, countryOrRegion = locationData.countryOrRegion, provinceOrState = locationData.provinceOrState, county = locationData.county;
                    this.data[location_1] = locationData;
                    if (provinceOrState != null && county != null) {
                        if (this.counties[countryOrRegion] == null) {
                            this.counties[countryOrRegion] = {};
                        }
                        if (this.counties[countryOrRegion][provinceOrState] == null) {
                            this.counties[countryOrRegion][provinceOrState] = [];
                        }
                        pushUnique(this.counties[countryOrRegion][provinceOrState], location_1);
                    }
                    else if (provinceOrState != null) {
                        if (this.states[countryOrRegion] == null) {
                            this.states[countryOrRegion] = [];
                        }
                        pushUnique(this.states[countryOrRegion], location_1);
                    }
                }
                this.savedAt = new Date();
                return [2 /*return*/];
            });
        });
    };
    MemoryStore.prototype.getLocationData = function (locations) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (this.data == null) {
                    throw new DataStoreNotInitializedError();
                }
                return [2 /*return*/, locations.map(function (location) {
                        var _a;
                        var data = (_a = _this.data) === null || _a === void 0 ? void 0 : _a[location];
                        if (data == null) {
                            throw new DataStoreInvalidLocationError(location);
                        }
                        return cloneInternalLocationData(data);
                    })];
            });
        });
    };
    MemoryStore.prototype.getLocationCount = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getLocationsList()];
                    case 1: return [2 /*return*/, (_a.sent()).length];
                }
            });
        });
    };
    MemoryStore.prototype.getStatesData = function (countryOrRegion) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var states;
            var _this = this;
            return __generator(this, function (_b) {
                if (this.data == null || this.states == null) {
                    throw new DataStoreNotInitializedError();
                }
                states = (_a = this.states[countryOrRegion]) !== null && _a !== void 0 ? _a : [];
                return [2 /*return*/, states.map(function (location) { return cloneInternalLocationData(_this.data[location]); })];
            });
        });
    };
    MemoryStore.prototype.getCountiesData = function (countryOrRegion, provinceOrState) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var counties;
            var _this = this;
            return __generator(this, function (_c) {
                if (this.data == null || this.counties == null) {
                    throw new DataStoreNotInitializedError();
                }
                counties = (_b = (_a = this.counties[countryOrRegion]) === null || _a === void 0 ? void 0 : _a[provinceOrState]) !== null && _b !== void 0 ? _b : [];
                return [2 /*return*/, counties.map(function (location) { return cloneInternalLocationData(_this.data[location]); })];
            });
        });
    };
    MemoryStore.prototype.getLocationsList = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.data == null) {
                    throw new DataStoreNotInitializedError();
                }
                return [2 /*return*/, Object.keys(this.data)];
            });
        });
    };
    MemoryStore.prototype.getSavedAt = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.data == null) {
                    throw new DataStoreNotInitializedError();
                }
                return [2 /*return*/, this.savedAt ? new Date(this.savedAt.getTime()) : undefined];
            });
        });
    };
    MemoryStore.prototype.setSourceLastUpdatedAt = function (sourceLastUpdatedAt) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.data == null) {
                    throw new DataStoreNotInitializedError();
                }
                this.sourceLastUpdatedAt = sourceLastUpdatedAt;
                return [2 /*return*/];
            });
        });
    };
    MemoryStore.prototype.getSourceLastUpdatedAt = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.data == null) {
                    throw new DataStoreNotInitializedError();
                }
                return [2 /*return*/, this.sourceLastUpdatedAt ? new Date(this.sourceLastUpdatedAt.getTime()) : undefined];
            });
        });
    };
    MemoryStore.prototype.clearData = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.data == null) {
                    throw new DataStoreNotInitializedError();
                }
                this.data = {};
                this.states = {};
                this.counties = {};
                this.savedAt = undefined;
                this.sourceLastUpdatedAt = undefined;
                return [2 /*return*/];
            });
        });
    };
    return MemoryStore;
}());
export { MemoryStore };
//# sourceMappingURL=MemoryStore.js.map