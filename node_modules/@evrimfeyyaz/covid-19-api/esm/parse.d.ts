import { LocationInfo } from "./types";
export interface ParsedCSV {
    [location: string]: ParsedCSVRow;
}
export interface ParsedCSVRow {
    [column: string]: string | number | undefined;
}
/**
 * Returns an object containing the location information in a {@link ParsedCSVRow}.
 *
 * @param row
 */
export declare function getLocationInfoFromRow(row: ParsedCSVRow): LocationInfo;
/**
 * Converts a string containing a date to a Date object, if it is in the right format,
 * such as "1/2/20".
 *
 * @param dateKey A string containing a date in the format "month/date/year", e.g. "1/2/20".
 */
export declare function dateKeyToDate(dateKey: string): Date | undefined;
/**
 * Converts the given Date object to a string in "month/day/year" format, e.g. "1/2/20".
 *
 * @param date
 */
export declare function dateToDateKey(date: Date): string;
/**
 * Parses the contents of a CSV file from the JHU CSSE time series data.
 *
 * @param csv
 */
export declare function parseCSV(csv: string): Promise<ParsedCSV>;
/**
 * Returns the keys of a {@link ParsedCSV} that are dates.
 *
 * @param parsedCSV
 */
export declare function getDateKeys(parsedCSV: ParsedCSV): string[];
