import { InternalLocationData } from "../types";
import { DataStore } from "./DataStore";
/**
 * A data store that saves to and loads from an IndexedDB database.
 *
 * For more information about its methods see {@link DataStore}.
 */
export declare class IndexedDBStore implements DataStore {
    readonly savedAtKey = "DataSavedAt";
    readonly sourceLastUpdatedAtKey = "DataSourceLastUpdatedAt";
    readonly dbName = "COVID19APIDB";
    readonly dbVersion = 1;
    private _db;
    private get db();
    init(): Promise<void>;
    clearData(): Promise<void>;
    getLocationData(locations: string[]): Promise<InternalLocationData[]>;
    getStatesData(countryOrRegion: string): Promise<InternalLocationData[]>;
    getCountiesData(countryOrRegion: string, provinceOrState: string): Promise<InternalLocationData[]>;
    getLocationsList(): Promise<string[]>;
    getLocationCount(): Promise<number>;
    getSavedAt(): Promise<Date | undefined>;
    getSourceLastUpdatedAt(): Promise<Date | undefined>;
    putLocationData(data: InternalLocationData[]): Promise<void>;
    setSourceLastUpdatedAt(lastUpdatedAt: Date): Promise<void>;
    /**
     * Opens an IndexedDB connection.
     *
     * If the database is not yet created, it also creates it. If the database exists but is an older
     * version, it upgrades it.
     */
    private setDB;
}
