"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataStoreInvalidLocationError = exports.DataStoreNotInitializedError = exports.DataStoreError = void 0;
var tslib_1 = require("tslib");
var COVID19APIError_1 = require("../COVID19APIError");
/**
 * The super class of data store specific errors.
 */
var DataStoreError = /** @class */ (function (_super) {
    tslib_1.__extends(DataStoreError, _super);
    function DataStoreError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = "DataStoreError";
        Object.setPrototypeOf(_this, DataStoreError.prototype);
        return _this;
    }
    return DataStoreError;
}(COVID19APIError_1.COVID19APIError));
exports.DataStoreError = DataStoreError;
/**
 * Thrown when a data store instance has not been initialized by calling the `init` method first.
 */
var DataStoreNotInitializedError = /** @class */ (function (_super) {
    tslib_1.__extends(DataStoreNotInitializedError, _super);
    function DataStoreNotInitializedError() {
        var _this = _super.call(this, "The data store is not initialized. Make sure to first call the `init` method.") || this;
        _this.name = "DataStoreNotInitializedError";
        Object.setPrototypeOf(_this, DataStoreNotInitializedError.prototype);
        return _this;
    }
    return DataStoreNotInitializedError;
}(DataStoreError));
exports.DataStoreNotInitializedError = DataStoreNotInitializedError;
/**
 * Thrown when a location cannot be found in the store.
 */
var DataStoreInvalidLocationError = /** @class */ (function (_super) {
    tslib_1.__extends(DataStoreInvalidLocationError, _super);
    function DataStoreInvalidLocationError(location) {
        var _this = _super.call(this, "Invalid location: \"" + location + "\".") || this;
        _this.name = "DataStoreInvalidLocationError";
        Object.setPrototypeOf(_this, DataStoreInvalidLocationError.prototype);
        return _this;
    }
    return DataStoreInvalidLocationError;
}(DataStoreError));
exports.DataStoreInvalidLocationError = DataStoreInvalidLocationError;
//# sourceMappingURL=DataStore.js.map